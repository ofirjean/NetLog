#cloud-config
package_update: true
packages:
  - python3
  - python3-pip

runcmd:
  - pip3 install flask psycopg2-binary
  - mkdir -p /opt/netlog

  - |
    cat > /opt/netlog/app.py << 'EOF'
    from flask import Flask, request, jsonify
    import psycopg2, os, sys

    app = Flask(__name__)

    try:
        conn = psycopg2.connect(
            host=os.environ.get("DB_HOST"),
            database="netlog_db",
            user="netlog_user",
            password=os.environ.get("DB_PASSWORD")
        )
        cur = conn.cursor()
    except Exception as e:
        print("Failed to connect to the database:", e)
        sys.exit(1)

    @app.route('/')
    def home():
        return 'NetLog App Running!'

    @app.route('/log', methods=['POST'])
    def log_data():
        data = request.get_json()
        message = data.get('message')
        if not message:
            return jsonify({"error": "Missing message"}), 400
        cur.execute("INSERT INTO logs (message) VALUES (%s)", (message,))
        conn.commit()
        return jsonify({"status": "logged", "message": message}), 201

    @app.route('/logs', methods=['GET'])
    def get_logs():
        cur.execute("SELECT * FROM logs;")
        rows = cur.fetchall()
        return jsonify(rows)

    if __name__ == '__main__':
        app.run(host='0.0.0.0', port=5000)
    EOF

  - |
    cat > /etc/systemd/system/flask.service <<EOF
    [Unit]
    Description=NetLog Flask App
    After=network.target

    [Service]
    ExecStart=/usr/bin/python3 /opt/netlog/app.py
    WorkingDirectory=/opt/netlog
    Environment=DB_PASSWORD=${db_password}
    Environment=DB_HOST=${db_host}
    Restart=always
    User=root

    [Install]
    WantedBy=multi-user.target
    EOF

  - systemctl daemon-reload
  - systemctl enable flask
  - systemctl start flask
